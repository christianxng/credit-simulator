version: '3'
services:
  postgres:
    container_name: postgres
    image: postgres:14.5
    restart: unless-stopped
    ports:
      - "5432:5432"
    networks:
      - default-network
    environment:
      POSTGRES_DB: ${POSTGRES_USER:-local_db}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres-data:/var/lib/postgresql/data/
  localstack:
    container_name: localstack
    image: localstack/localstack:0.12.10
    networks:
      - default-network
    ports:
      - "4566:4566"
    hostname: localstack
    extra_hosts:
      - "localstack:127.0.0.1"
    environment:
      # LocalStack configuration: https://docs.localstack.cloud/references/configuration/
      - SERVICES=ses
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=guest
      - AWS_SECRET_ACCESS_KEY=guest
      - DEBUG=1
      - USE_SSL=0
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./ci/localstack/create-resources.sh:/docker-entrypoint-initaws.d/create-resources.sh"

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - default-network

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    networks:
      - default-network
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

  kafdrop:
    container_name: kafka_drop
    image: obsidiandynamics/kafdrop:latest
    networks:
      - default-network
    depends_on:
      - kafka
    ports:
      - "19000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

  credit-simulator:
    container_name: credit-simulator
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - JAVA_OPTS=-DKAFKA_SERVER=kafka:9092 -DSES_ENDPOINT=http://localstack:4566 -DDB_URL=jdbc:postgresql://postgres:5432/local_db -DDB_USER=postgres -DDB_PASSWORD=postgres
    depends_on:
      - postgres
    networks:
      - default-network
networks:
  default-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local