# Spring configuration
spring.application.name=credit-simulator

# Request Processing Timeout
credit.simulator.synchronous.processing.timeout=1000

# Kafka Configuration
spring.kafka.producer.bootstrap-servers=\${KAFKA_SERVER:localhost:9092}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.template.default-topic=credit-simulator-topic

# AWS
amazon.ses.sender-email=creditteam@email.com
spring.cloud.aws.ses.endpoint=\${SES_ENDPOINT:http://localhost:4566}
spring.cloud.aws.region.static=us-east-1
spring.cloud.aws.credentials.access-key=guest
spring.cloud.aws.credentials.secret-key=guest



# Datasource and JPA
spring.web.locale=pt_BR
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=\${DB_URL:jdbc:postgresql://localhost:5432/local_db}
spring.datasource.username=\${DB_USER:postgres}
spring.datasource.password=\${DB_PASSWORD:postgres}
spring.datasource.hikari.auto-commit=false
spring.datasource.hikari.maximum-pool-size=20
# Tempo limite para obter uma conexão do pool
spring.datasource.hikari.connection-timeout=10000
# Tempo limite para validar uma conexão
spring.datasource.hikari.validation-timeout=5000
# Tempo de vida de uma conexão no pool antes de ser encerrada
spring.datasource.hikari.max-lifetime=1800000
# Detecta conexões vazando se não forem fechadas dentro do limite
spring.datasource.hikari.leak-detection-threshold=60000
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true
# Garante que as sessões sejam fechadas ao final da transação
spring.jpa.open-in-view=false
# Atualização automatica do esquema do banco de dados
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
spring.jpa.properties.hibernate.jdbc.batch_size=15
# Ordenação por entidade em lote para inserção
spring.jpa.properties.hibernate.jdbc.order_inserts=true
# Ordenação por entidade em lote para atualização
spring.jpa.properties.hibernate.jdbc.order_updates=true
# Dados versionados sejam incluídos em lotes
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.properties.jakarta.persistence.create-database-schemas=true
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=true
# Ativa preenchimento de parâmetros em cláusulas IN para melhorar o desempenho de consultas complexas.
spring.jpa.properties.hibernate.query.in_clause_parameter_padding=true
# Configura o Hibernate para lançar exceções caso a paginação de consultas inclua coleções "fetch".
spring.jpa.properties.hibernate.query.fail_on_pagination_over_collection_fetch=true
# tamanho do cache de consuta do hibernate
spring.jpa.properties.hibernate.query.plan_cache_max_size=4096


## Zalando Problem Spring Web
spring.web.resources.add-mappings=false
spring.mvc.throw-exception-if-no-handler-found=true